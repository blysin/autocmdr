name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Build binaries
      run: |
        # Get version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        GIT_COMMIT=$(git rev-parse HEAD)
        BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        
        # Build flags
        LDFLAGS="-ldflags \"-X github.com/blysin/autocmdr/internal/version.Version=${VERSION} \
                           -X github.com/blysin/autocmdr/internal/version.GitCommit=${GIT_COMMIT} \
                           -X github.com/blysin/autocmdr/internal/version.BuildDate=${BUILD_DATE}\""
        
        # Create build directory
        mkdir -p build
        
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build ${LDFLAGS} -o build/autocmdr-linux-amd64 ./cmd/autocmdr
        GOOS=linux GOARCH=arm64 go build ${LDFLAGS} -o build/autocmdr-linux-arm64 ./cmd/autocmdr
        GOOS=darwin GOARCH=amd64 go build ${LDFLAGS} -o build/autocmdr-darwin-amd64 ./cmd/autocmdr
        GOOS=darwin GOARCH=arm64 go build ${LDFLAGS} -o build/autocmdr-darwin-arm64 ./cmd/autocmdr
        GOOS=windows GOARCH=amd64 go build ${LDFLAGS} -o build/autocmdr-windows-amd64.exe ./cmd/autocmdr
        
        # Create archives
        cd build
        tar -czf autocmdr-linux-amd64.tar.gz autocmdr-linux-amd64
        tar -czf autocmdr-linux-arm64.tar.gz autocmdr-linux-arm64
        tar -czf autocmdr-darwin-amd64.tar.gz autocmdr-darwin-amd64
        tar -czf autocmdr-darwin-arm64.tar.gz autocmdr-darwin-arm64
        zip autocmdr-windows-amd64.zip autocmdr-windows-amd64.exe
    
    - name: Generate changelog
      run: |
        # Generate changelog from git commits
        git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s" > CHANGELOG.md || echo "- Initial release" > CHANGELOG.md
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/*.tar.gz
          build/*.zip
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
